version: '3'

volumes:
  dbbackups:
  postgis-data:


networks:
  fwas-network:


services:
  web:
    build: .
    container_name: web
    image: fwas
    ports: 
      - "5000:5000"
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; fwas run --host=0.0.0.0'
    environment:
      - DATABASE_URL=postgres://docker:docker@db:5432/gis
    env_file: .env
    networks:
      fwas-network:
        aliases:
          - web
    volumes:
      - .:/app
    depends_on: 
      - redis
    links:
      - redis
      - db

  worker:
    image: fwas
    container_name: worker
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; fwas runworker'
    environment:
      - DATABASE_URL=postgres://docker:docker@db:5432/gis
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      fwas-network:
        aliases:
          - redis
    links:
      - web
      - redis
      - db
  redis:
    image: redis:3.2
    networks:
      - fwas-network

  db:
    image: kartoza/postgis:11.0-2.5 
    networks:
      fwas-network:
        aliases:
          - db
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql
      - ./dbbackups:/backups
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,ogr_fdw
    ports:
      - 5432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    ports:
      - "4000:4000"
    networks:
      - fwas-network
    links:
      - web
