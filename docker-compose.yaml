version: '3'

volumes:
  dbbackups:
  postgis-data:
  postgres:


networks:
  fwas-network:


services:
  app:
    build: .
    command: bash entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - redis
      - db
    networks:
      - fwas-network

  worker:
    build: .
    command: >
      fwas runworker
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - fwas-network
    depends_on:
      - redis
      - db

  rqscheduler:
    image: iddan/rq-scheduler:slim
    command: --url $REDIS_URL
    networks:
      - fwas-network
    depends_on:
      - redis
    env_file:
      - .env

  redis:
    image: redis:3.2
    ports:
      - "6379:6379"
    networks:
      - fwas-network

  db:
    image: kartoza/postgis:11.0-2.5 
    networks:
      fwas-network:
        aliases:
          - db
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./dbbackups:/backups
    environment:
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,ogr_fdw,postgis_raster
    ports:
      - 5432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"
