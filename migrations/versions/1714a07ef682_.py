"""empty message

Revision ID: 1714a07ef682
Revises:
Create Date: 2020-03-01 21:30:35.442441

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import fwas

# revision identifiers, used by Alembic.
revision = '1714a07ef682'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('alerts', sa.Column('created_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.add_column('alerts', sa.Column('updated_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.drop_index('idx_alerts_geom', table_name='alerts')
    op.add_column('notifications', sa.Column('created_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.add_column('notifications', sa.Column('updated_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.add_column('users', sa.Column('created_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.add_column('users', sa.Column('updated_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.create_unique_constraint(None, 'users', ['email'])
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'last_sign_in_at')
    op.drop_column('users', 'sign_in_count')
    op.drop_column('users', 'last_sign_in_ip')
    op.drop_column('users', 'current_sign_in_ip')
    op.drop_column('users', 'current_sign_in_at')
    op.add_column('weather_rasters', sa.Column('created_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    op.add_column('weather_rasters', sa.Column('updated_at', fwas.models.AwareDateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('weather_rasters', 'updated_at')
    op.drop_column('weather_rasters', 'created_at')
    op.add_column('users', sa.Column('current_sign_in_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('current_sign_in_ip', sa.VARCHAR(length=45), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_sign_in_ip', sa.VARCHAR(length=45), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('sign_in_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('last_sign_in_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('notifications', 'updated_at')
    op.drop_column('notifications', 'created_at')
    op.create_index('idx_alerts_geom', 'alerts', ['geom'], unique=False)
    op.drop_column('alerts', 'updated_at')
    op.drop_column('alerts', 'created_at')
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
